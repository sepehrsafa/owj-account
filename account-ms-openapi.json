{"openapi": "3.1.0", "info": {"title": "OWJ CRS Account Microservice", "description": "This is the API documentation for the OWJ CRS Account Service.", "version": "1.0.0"}, "servers": [{"url": "https://account.owj.app/", "description": "Production environment"}, {"url": "http://localhost:8000/", "description": "Local environment"}], "paths": {"/api/account/v1/user": {"post": {"tags": ["User Account"], "summary": "Create User Account", "description": "Type and Scope:\n\n- **Type**: AGENCY or BUSINESS User Set\n- **Scope**: USER_ACCOUNT:CREATE\n\nDescription:\n\n- **AGENCY_SUPERUSER**: Can create any type of user account, including other AGENCY users. Business is needed if the user type is BUSINESS_USER.\n- **AGENCY_USER**: Can create any type of user account, excluding other AGENCY users. Business is needed if the user type is BUSINESS_USER.\n- **BUSINESS_SUPERUSER and USER**: Can create only **BUSINESS_USER**. The business will be set automatically based on the business of the user who is creating this user account.", "operationId": "create_user_account", "security": [{"OAuth2PasswordBearer": ["USER_ACCOUNT:CREATE"]}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserAccountCreateRequest"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserAccountResponse"}}}}, "400": {"description": "An error occurred. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "401": {"description": "Authentication failed. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "422": {"description": "Validation error. The input doesn't match the schema. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ValidationErrorResponse"}}}}, "403": {"description": "Permission denied. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}}}, "get": {"tags": ["User Account"], "summary": "Get User Accounts", "description": "Type and Scope:\n\n- **Type**: AGENCY or BUSINESS User Set\n- **Scope**: USER_ACCOUNT:READ", "operationId": "get_user_accounts", "security": [{"OAuth2PasswordBearer": ["USER_ACCOUNT:READ"]}], "parameters": [{"name": "offset", "in": "query", "required": false, "schema": {"type": "integer", "default": 0, "title": "Offset"}}, {"name": "size", "in": "query", "required": false, "schema": {"type": "integer", "default": 10, "title": "Size"}}, {"name": "logical_op", "in": "query", "required": false, "schema": {"allOf": [{"$ref": "#/components/schemas/LogicalOperation"}], "default": "and", "title": "Logical Op"}}, {"name": "match_type", "in": "query", "required": false, "schema": {"allOf": [{"$ref": "#/components/schemas/MatchType"}], "default": "like", "title": "Match Type"}}, {"name": "phone_number", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Phone Number"}}, {"name": "email", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Email"}}, {"name": "first_name", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "First Name"}}, {"name": "last_name", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Last Name"}}, {"name": "type", "in": "query", "required": false, "schema": {"anyOf": [{"$ref": "#/components/schemas/UserTypeChoices"}, {"type": "null"}], "title": "Type"}}, {"name": "is_active", "in": "query", "required": false, "schema": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Is Active"}}, {"name": "is_buying_allowed", "in": "query", "required": false, "schema": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Is Buying Allowed"}}, {"name": "is_phone_number_verified", "in": "query", "required": false, "schema": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Is Phone Number Verified"}}, {"name": "is_email_verified", "in": "query", "required": false, "schema": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Is Email Verified"}}, {"name": "is_only_otp_login_allowed", "in": "query", "required": false, "schema": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Is Only Otp Login Allowed"}}, {"name": "is_2fa_on", "in": "query", "required": false, "schema": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Is 2Fa On"}}, {"name": "business_id", "in": "query", "required": false, "schema": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Business Id"}}, {"name": "iran_national_id", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Iran National Id"}}, {"name": "iban_number", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Iban Number"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserAccountsResponse"}}}}, "400": {"description": "An error occurred. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "401": {"description": "Authentication failed. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "422": {"description": "Validation error. The input doesn't match the schema. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ValidationErrorResponse"}}}}, "403": {"description": "Permission denied. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}}}}, "/api/account/v1/user/me": {"get": {"tags": ["User Account"], "summary": "Get My User Account", "description": "Type and Scope:\n\n- **Type**: Any User Set\n- **Scope**: None", "operationId": "get_my_user_account", "security": [{"OAuth2PasswordBearer": []}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserAccountMeResponse"}}}}, "400": {"description": "An error occurred. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "401": {"description": "Authentication failed. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "422": {"description": "Validation error. The input doesn't match the schema. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ValidationErrorResponse"}}}}, "403": {"description": "Permission denied. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}}}, "put": {"tags": ["User Account"], "summary": "Update My User Account", "description": "Type and Scope:\n\n- **Type**: Any User Set\n- **Scope**: None", "operationId": "update_my_user_account", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "query", "required": true, "schema": {"type": "integer", "title": "Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserAccountUpdateRequest"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserAccountResponse"}}}}, "400": {"description": "An error occurred. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "401": {"description": "Authentication failed. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "422": {"description": "Validation error. The input doesn't match the schema. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ValidationErrorResponse"}}}}, "403": {"description": "Permission denied. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}}}}, "/api/account/v1/user/{id}": {"get": {"tags": ["User Account"], "summary": "Get User Account", "description": "Type and Scope:\n\n- **Type**: AGENCY or BUSINESS User Set\n- **Scope**: USER_ACCOUNT:READ", "operationId": "get_user_account", "security": [{"OAuth2PasswordBearer": ["USER_ACCOUNT:READ"]}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserAccountResponse"}}}}, "400": {"description": "An error occurred. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "401": {"description": "Authentication failed. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "422": {"description": "Validation error. The input doesn't match the schema. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ValidationErrorResponse"}}}}, "403": {"description": "Permission denied. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}}}, "put": {"tags": ["User Account"], "summary": "Update User Account", "description": "Type and Scope:\n\n- **Type**: Any User Set\n- **Scope**: USER_ACCOUNT:UPDATE\n\nDescription:\nAGENCY users can update any user account, excluding other AGENCY users. BUSINESS users can update only users of their business. REGULAR users can update only themselves.", "operationId": "update_user_account", "security": [{"OAuth2PasswordBearer": ["USER_ACCOUNT:UPDATE"]}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"anyOf": [{"$ref": "#/components/schemas/UserAccountUpdateRequestByAgency"}, {"$ref": "#/components/schemas/UserAccountUpdateRequest"}], "title": "Data"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserAccountResponse"}}}}, "400": {"description": "An error occurred. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "401": {"description": "Authentication failed. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "422": {"description": "Validation error. The input doesn't match the schema. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ValidationErrorResponse"}}}}, "403": {"description": "Permission denied. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}}}}, "/api/account/v1/group": {"post": {"tags": ["User Group"], "summary": "Create Group", "description": "Type and Scope:\n\n- **Type**: AGENCY  User Set\n- **Scope**: USER_GROUP:READ", "operationId": "create_group", "security": [{"OAuth2PasswordBearer": ["USER_GROUP:CREATE"]}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/CreateGroupRequest"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupResponse"}}}}, "400": {"description": "An error occurred. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "401": {"description": "Authentication failed. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "422": {"description": "Validation error. The input doesn't match the schema. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ValidationErrorResponse"}}}}, "403": {"description": "Permission denied. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}}}, "get": {"tags": ["User Group"], "summary": "Get Groups", "description": "Type and Scope:\n\n- **Type**: AGENCY  User Set\n- **Scope**: USER_GROUP:READ", "operationId": "get_groups", "security": [{"OAuth2PasswordBearer": ["USER_GROUP:READ"]}], "parameters": [{"name": "offset", "in": "query", "required": false, "schema": {"type": "integer", "default": 0, "title": "Offset"}}, {"name": "size", "in": "query", "required": false, "schema": {"type": "integer", "default": 10, "title": "Size"}}, {"name": "logical_op", "in": "query", "required": false, "schema": {"allOf": [{"$ref": "#/components/schemas/LogicalOperation"}], "default": "and", "title": "Logical Op"}}, {"name": "match_type", "in": "query", "required": false, "schema": {"allOf": [{"$ref": "#/components/schemas/MatchType"}], "default": "like", "title": "Match Type"}}, {"name": "name", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Name"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupsResponse"}}}}, "400": {"description": "An error occurred. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "401": {"description": "Authentication failed. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "422": {"description": "Validation error. The input doesn't match the schema. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ValidationErrorResponse"}}}}, "403": {"description": "Permission denied. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}}}}, "/api/account/v1/group/me": {"get": {"tags": ["User Group"], "summary": "Get My Groups", "description": "Type and Scope:\n\n- **Type**: Any User Set\n- **Scope**: None", "operationId": "get_my_groups", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/MyGroupsResponse"}}}}, "400": {"description": "An error occurred. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "401": {"description": "Authentication failed. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "422": {"description": "Validation error. The input doesn't match the schema. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ValidationErrorResponse"}}}}, "403": {"description": "Permission denied. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}}, "security": [{"OAuth2PasswordBearer": []}]}}, "/api/account/v1/group/user/{user_id}": {"get": {"tags": ["User Group"], "summary": "Get User Groups", "description": "Type and Scope:\n\n- **Type**: AGENCY AND BUSINESS User Set\n- **Scope**: None", "operationId": "get_user_groups", "security": [{"OAuth2PasswordBearer": ["USER_GROUP:READ"]}], "parameters": [{"name": "user_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "User Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/MyGroupsResponse"}}}}, "400": {"description": "An error occurred. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "401": {"description": "Authentication failed. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "422": {"description": "Validation error. The input doesn't match the schema. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ValidationErrorResponse"}}}}, "403": {"description": "Permission denied. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}}}}, "/api/account/v1/group/{id}": {"get": {"tags": ["User Group"], "summary": "Get Group", "description": "Type and Scope:\n\n- **Type**: AGENCY  User Set\n- **Scope**: USER_GROUP:READ", "operationId": "get_group", "security": [{"OAuth2PasswordBearer": ["USER_GROUP:READ"]}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupResponse"}}}}, "400": {"description": "An error occurred. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "401": {"description": "Authentication failed. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "422": {"description": "Validation error. The input doesn't match the schema. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ValidationErrorResponse"}}}}, "403": {"description": "Permission denied. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}}}, "put": {"tags": ["User Group"], "summary": "Update Group", "description": "Type and Scope:\n\n- **Type**: AGENCY  User Set\n- **Scope**: USER_GROUP:UPDATE", "operationId": "update_group", "security": [{"OAuth2PasswordBearer": ["USER_GROUP:UPDATE"]}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UpdateGroupRequest"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupResponse"}}}}, "400": {"description": "An error occurred. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "401": {"description": "Authentication failed. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "422": {"description": "Validation error. The input doesn't match the schema. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ValidationErrorResponse"}}}}, "403": {"description": "Permission denied. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}}}, "delete": {"tags": ["User Group"], "summary": "Delete Group", "description": "Type and Scope:\n\n- **Type**: AGENCY  User Set\n- **Scope**: USER_GROUP:DELETE", "operationId": "delete_group", "security": [{"OAuth2PasswordBearer": ["USER_GROUP:DELETE"]}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Response"}}}}, "400": {"description": "An error occurred. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "401": {"description": "Authentication failed. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "422": {"description": "Validation error. The input doesn't match the schema. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ValidationErrorResponse"}}}}, "403": {"description": "Permission denied. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}}}}, "/api/account/v1/group/{id}/add": {"post": {"tags": ["User Group"], "summary": "Add User To Group", "description": "Type and Scope:\n\n- **Type**: AGENCY  User Set\n- **Scope**: USER_GROUP:ADD_USER", "operationId": "add_user_to_group", "security": [{"OAuth2PasswordBearer": ["USER_GROUP:ADD_USER"]}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AddUserToGroupRequest"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupResponse"}}}}, "400": {"description": "An error occurred. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "401": {"description": "Authentication failed. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "422": {"description": "Validation error. The input doesn't match the schema. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ValidationErrorResponse"}}}}, "403": {"description": "Permission denied. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}}}}, "/api/account/v1/group/{id}/remove": {"delete": {"tags": ["User Group"], "summary": "Remove User From Group", "description": "Type and Scope:\n\n- **Type**: AGENCY  User Set\n- **Scope**: USER_GROUP:ADD_USER", "operationId": "remove_user_from_group", "security": [{"OAuth2PasswordBearer": ["USER_GROUP:READ"]}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AddUserToGroupRequest"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupResponse"}}}}, "400": {"description": "An error occurred. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "401": {"description": "Authentication failed. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "422": {"description": "Validation error. The input doesn't match the schema. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ValidationErrorResponse"}}}}, "403": {"description": "Permission denied. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}}}}, "/api/account/v1/business": {"post": {"tags": ["Business Account"], "summary": "Create Business Account", "description": "Type and Scope:\n\n- **Type**: AGENCY User Set\n- **Scope**: BUSINESS_ACCOUNT:CREATE\n\nDescription:\n\nIf the provided phone number is already registered as a user, the user will be converted to a business user.\nThe users wallets will be assigned to the business.\n\nIf the provided phone number is not registered as a user, a new user will be created and assigned to the business.", "operationId": "create_business_account", "security": [{"OAuth2PasswordBearer": ["BUSINESS_ACCOUNT:CREATE"]}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/BusinessAccountCreateRequest"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/BusinessAccountResponse"}}}}, "400": {"description": "An error occurred. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "401": {"description": "Authentication failed. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "422": {"description": "Validation error. The input doesn't match the schema. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ValidationErrorResponse"}}}}, "403": {"description": "Permission denied. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}}}, "get": {"tags": ["Business Account"], "summary": "List Business Accounts", "description": "Type and Scope:\n\n- **Type**: AGENCY User Set\n- **Scope**: BUSINESS_ACCOUNT:READ", "operationId": "list_business_accounts", "security": [{"OAuth2PasswordBearer": ["BUSINESS_ACCOUNT:READ"]}], "parameters": [{"name": "offset", "in": "query", "required": false, "schema": {"type": "integer", "default": 0, "title": "Offset"}}, {"name": "size", "in": "query", "required": false, "schema": {"type": "integer", "default": 10, "title": "Size"}}, {"name": "logical_op", "in": "query", "required": false, "schema": {"allOf": [{"$ref": "#/components/schemas/LogicalOperation"}], "default": "and", "title": "Logical Op"}}, {"name": "match_type", "in": "query", "required": false, "schema": {"allOf": [{"$ref": "#/components/schemas/MatchType"}], "default": "like", "title": "Match Type"}}, {"name": "name", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Name"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/BusinessAccountsResponse"}}}}, "400": {"description": "An error occurred. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "401": {"description": "Authentication failed. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "422": {"description": "Validation error. The input doesn't match the schema. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ValidationErrorResponse"}}}}, "403": {"description": "Permission denied. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}}}}, "/api/account/v1/business/me": {"get": {"tags": ["Business Account"], "summary": "Get the business account of the current user ", "description": "Type and Scope:\n\n- **Type**: BUSINESS User Set\n- **Scope**: None", "operationId": "get_business_account_me", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/BusinessAccountResponse"}}}}, "400": {"description": "An error occurred. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "401": {"description": "Authentication failed. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "422": {"description": "Validation error. The input doesn't match the schema. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ValidationErrorResponse"}}}}, "403": {"description": "Permission denied. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}}, "security": [{"OAuth2PasswordBearer": []}]}}, "/api/account/v1/business/{id}": {"get": {"tags": ["Business Account"], "summary": "Get Business Account", "description": "Type and Scope:\n\n- **Type**: AGENCY User Set\n- **Scope**: BUSINESS_ACCOUNT:READ", "operationId": "get_business_account", "security": [{"OAuth2PasswordBearer": ["BUSINESS_ACCOUNT:READ"]}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/BusinessAccountResponse"}}}}, "400": {"description": "An error occurred. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "401": {"description": "Authentication failed. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "422": {"description": "Validation error. The input doesn't match the schema. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ValidationErrorResponse"}}}}, "403": {"description": "Permission denied. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}}}, "put": {"tags": ["Business Account"], "summary": "Update Business Account", "description": "Type and Scope:\n\n- **Type**: AGENCY_AND_BUSINESS User Set\n- **Scope**: BUSINESS_ACCOUNT:UPDATE", "operationId": "update_business_account", "security": [{"OAuth2PasswordBearer": ["BUSINESS_ACCOUNT:UPDATE"]}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"anyOf": [{"$ref": "#/components/schemas/AgencyBusinessAccountUpdateRequest"}, {"$ref": "#/components/schemas/BusinessAccountUpdateRequest"}], "title": "Data"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/BusinessAccountResponse"}}}}, "400": {"description": "An error occurred. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "401": {"description": "Authentication failed. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "422": {"description": "Validation error. The input doesn't match the schema. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ValidationErrorResponse"}}}}, "403": {"description": "Permission denied. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}}}}, "/api/account/v1/auth/password": {"post": {"tags": ["Authentication"], "summary": "Password Login", "description": "This endpoint is used to get an access token for a user.\n\nThe access token is used to authenticate the user for all other endpoints.\n\nFuture requests should include the access token in the Authorization header.\n\nIf two-factor authentication is enabled, an OTP is sent to the user's phone number. The user must then retry the request with the OTP.", "operationId": "password_login", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/UsernamePasswordLoginRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TokenResponse"}}}}, "202": {"description": "Two factor authentication is enabled. OTP sent. Retry with OTP", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/OTPResponse"}}}}, "400": {"description": "An error occurred. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "401": {"description": "Authentication failed. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "422": {"description": "Validation error. The input doesn't match the schema. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ValidationErrorResponse"}}}}, "403": {"description": "Permission denied. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}}}}, "/api/account/v1/auth/otp": {"post": {"tags": ["Authentication"], "summary": "Get Totp", "description": "Get a Time-based One-Time Password (TOTP) for a user.\n\nIf the user does not exist, a new user is created.\n\nIf the user is not allowed to login with only OTP (OTP login is disabled), an error (E1015) is returned.", "operationId": "get_totp", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/OTPRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/OTPResponse"}}}}, "400": {"description": "An error occurred. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "401": {"description": "Authentication failed. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "422": {"description": "Validation error. The input doesn't match the schema. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ValidationErrorResponse"}}}}, "403": {"description": "Permission denied. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}}}}, "/api/account/v1/auth/otp/verify": {"post": {"tags": ["Authentication"], "summary": "Totp Login", "description": "Verify the Time-based One-Time Password (TOTP) for a user.", "operationId": "totp_login", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/OTPLoginRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TokenResponse"}}}}, "400": {"description": "An error occurred. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "401": {"description": "Authentication failed. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "422": {"description": "Validation error. The input doesn't match the schema. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ValidationErrorResponse"}}}}, "403": {"description": "Permission denied. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}}}}, "/api/account/v1/auth/set-password": {"post": {"tags": ["Authentication"], "summary": "Set Password", "description": "Set password for a user if the user has not set a password yet", "operationId": "set_password", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/SetPasswordRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TokenResponse"}}}}, "400": {"description": "An error occurred. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "401": {"description": "Authentication failed. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "422": {"description": "Validation error. The input doesn't match the schema. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ValidationErrorResponse"}}}}, "403": {"description": "Permission denied. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}}, "security": [{"OAuth2PasswordBearer": []}]}}, "/api/account/v1/auth/refresh": {"post": {"tags": ["Authentication"], "summary": "Refresh Token", "description": "Refresh an access token\n\nThis endpoint is used to get a new access token using a refresh token.\n\nThe old refresh token is invalidated and a new refresh token is returned.", "operationId": "refresh_token", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/RefreshTokenRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TokenResponse"}}}}, "400": {"description": "An error occurred. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "401": {"description": "Authentication failed. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "422": {"description": "Validation error. The input doesn't match the schema. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ValidationErrorResponse"}}}}, "403": {"description": "Permission denied. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}}}}, "/api/account/v1/auth/logout": {"post": {"tags": ["Authentication"], "summary": "Logout", "description": "Logout a user\n\nThis endpoint is used to logout a user.\n\nThe refresh token is invalidated and the user is logged out.", "operationId": "logout", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/RefreshTokenRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Response"}}}}, "400": {"description": "An error occurred. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "401": {"description": "Authentication failed. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "422": {"description": "Validation error. The input doesn't match the schema. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ValidationErrorResponse"}}}}, "403": {"description": "Permission denied. Check the error code and message.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}}}}, "/api/account/v1/wallet/transaction": {"post": {"tags": ["Wallet Transaction"], "summary": "Create Wallet Transaction", "description": "Type and Scope:\n\n- **Type**: AGENCY User Set\n- **Scope**: WALLET_TRANSACTION:CREATE", "operationId": "create_wallet_transaction", "security": [{"OAuth2PasswordBearer": ["WALLET_TRANSACTION:CREATE"]}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"anyOf": [{"$ref": "#/components/schemas/WalletTransactionRequestByUserID"}, {"$ref": "#/components/schemas/WalletTransactionRequestByBusinessID"}], "title": "Wallet Transaction Request"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/WalletTransactionResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "get": {"tags": ["Wallet Transaction"], "summary": "Get Wallet Transactions", "description": "Type and Scope:\n\n- **Type**: AGENCY User Set\n- **Scope**: WALLET_TRANSACTION:READ", "operationId": "get_wallet_transactions", "security": [{"OAuth2PasswordBearer": ["WALLET_TRANSACTION:READ"]}], "parameters": [{"name": "offset", "in": "query", "required": false, "schema": {"type": "integer", "default": 0, "title": "Offset"}}, {"name": "size", "in": "query", "required": false, "schema": {"type": "integer", "default": 10, "title": "Size"}}, {"name": "logical_op", "in": "query", "required": false, "schema": {"allOf": [{"$ref": "#/components/schemas/LogicalOperation"}], "default": "and", "title": "Logical Op"}}, {"name": "match_type", "in": "query", "required": false, "schema": {"allOf": [{"$ref": "#/components/schemas/MatchType"}], "default": "like", "title": "Match Type"}}, {"name": "amount", "in": "query", "required": false, "schema": {"anyOf": [{"type": "number"}, {"type": "string"}, {"type": "null"}], "title": "Amount"}}, {"name": "currency", "in": "query", "required": false, "schema": {"anyOf": [{"$ref": "#/components/schemas/CurrencyChoices"}, {"type": "null"}], "title": "Currency"}}, {"name": "note", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Note"}}, {"name": "reference", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Reference"}}, {"name": "preformed_by", "in": "query", "required": false, "schema": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Preformed By"}}, {"name": "balance", "in": "query", "required": false, "schema": {"anyOf": [{"type": "number"}, {"type": "string"}, {"type": "null"}], "title": "Balance"}}, {"name": "wallet", "in": "query", "required": false, "schema": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Wallet"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/WalletTransactionsResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/account/v1/wallet/transaction/me": {"get": {"tags": ["Wallet Transaction"], "summary": "Get My Wallet Transactions", "description": "Type and Scope:\n\n- **Type**: Any User Set\n- **Scope**: None", "operationId": "get_my_wallet_transactions", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "offset", "in": "query", "required": false, "schema": {"type": "integer", "default": 0, "title": "Offset"}}, {"name": "size", "in": "query", "required": false, "schema": {"type": "integer", "default": 10, "title": "Size"}}, {"name": "logical_op", "in": "query", "required": false, "schema": {"allOf": [{"$ref": "#/components/schemas/LogicalOperation"}], "default": "and", "title": "Logical Op"}}, {"name": "match_type", "in": "query", "required": false, "schema": {"allOf": [{"$ref": "#/components/schemas/MatchType"}], "default": "like", "title": "Match Type"}}, {"name": "amount", "in": "query", "required": false, "schema": {"anyOf": [{"type": "number"}, {"type": "string"}, {"type": "null"}], "title": "Amount"}}, {"name": "currency", "in": "query", "required": false, "schema": {"anyOf": [{"$ref": "#/components/schemas/CurrencyChoices"}, {"type": "null"}], "title": "Currency"}}, {"name": "note", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Note"}}, {"name": "reference", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Reference"}}, {"name": "preformed_by", "in": "query", "required": false, "schema": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Preformed By"}}, {"name": "balance", "in": "query", "required": false, "schema": {"anyOf": [{"type": "number"}, {"type": "string"}, {"type": "null"}], "title": "Balance"}}, {"name": "wallet", "in": "query", "required": false, "schema": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Wallet"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/WalletTransactionsResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/account/v1/wallet/transaction/me/{id}": {"get": {"tags": ["Wallet Transaction"], "summary": "Get My Wallet Transaction", "description": "Type and Scope:\n\n- **Type**: Any User Set\n- **Scope**: None", "operationId": "get_my_wallet_transaction", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "integer", "description": "Transaction UUID", "title": "Id"}, "description": "Transaction UUID", "example": 1}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/WalletTransactionResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/account/v1/wallet/transaction/business/{business_id}": {"get": {"tags": ["Wallet Transaction"], "summary": "Get Business Wallet Transactions", "description": "Type and Scope:\n\n- **Type**: AGENCY or Business User Set\n- **Scope**: WALLET_TRANSACTION:READ", "operationId": "get_business_wallet_transactions", "security": [{"OAuth2PasswordBearer": ["WALLET_TRANSACTION:READ"]}], "parameters": [{"name": "business_id", "in": "path", "required": true, "schema": {"type": "integer", "description": "Business ID", "title": "Business Id"}, "description": "Business ID", "example": 1}, {"name": "offset", "in": "query", "required": false, "schema": {"type": "integer", "default": 0, "title": "Offset"}}, {"name": "size", "in": "query", "required": false, "schema": {"type": "integer", "default": 10, "title": "Size"}}, {"name": "logical_op", "in": "query", "required": false, "schema": {"allOf": [{"$ref": "#/components/schemas/LogicalOperation"}], "default": "and", "title": "Logical Op"}}, {"name": "match_type", "in": "query", "required": false, "schema": {"allOf": [{"$ref": "#/components/schemas/MatchType"}], "default": "like", "title": "Match Type"}}, {"name": "amount", "in": "query", "required": false, "schema": {"anyOf": [{"type": "number"}, {"type": "string"}, {"type": "null"}], "title": "Amount"}}, {"name": "currency", "in": "query", "required": false, "schema": {"anyOf": [{"$ref": "#/components/schemas/CurrencyChoices"}, {"type": "null"}], "title": "Currency"}}, {"name": "note", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Note"}}, {"name": "reference", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Reference"}}, {"name": "preformed_by", "in": "query", "required": false, "schema": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Preformed By"}}, {"name": "balance", "in": "query", "required": false, "schema": {"anyOf": [{"type": "number"}, {"type": "string"}, {"type": "null"}], "title": "Balance"}}, {"name": "wallet", "in": "query", "required": false, "schema": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Wallet"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/WalletTransactionsResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/account/v1/wallet/transaction/{user_id}": {"get": {"tags": ["Wallet Transaction"], "summary": "Get User Wallet Transactions", "description": "Type and Scope:\n\n- **Type**: Any User Set\n- **Scope**: None", "operationId": "get_user_wallet_transactions", "security": [{"OAuth2PasswordBearer": ["WALLET_TRANSACTION:READ"]}], "parameters": [{"name": "user_id", "in": "path", "required": true, "schema": {"type": "integer", "description": "User ID", "title": "User Id"}, "description": "User ID", "example": 1}, {"name": "offset", "in": "query", "required": false, "schema": {"type": "integer", "default": 0, "title": "Offset"}}, {"name": "size", "in": "query", "required": false, "schema": {"type": "integer", "default": 10, "title": "Size"}}, {"name": "logical_op", "in": "query", "required": false, "schema": {"allOf": [{"$ref": "#/components/schemas/LogicalOperation"}], "default": "and", "title": "Logical Op"}}, {"name": "match_type", "in": "query", "required": false, "schema": {"allOf": [{"$ref": "#/components/schemas/MatchType"}], "default": "like", "title": "Match Type"}}, {"name": "amount", "in": "query", "required": false, "schema": {"anyOf": [{"type": "number"}, {"type": "string"}, {"type": "null"}], "title": "Amount"}}, {"name": "currency", "in": "query", "required": false, "schema": {"anyOf": [{"$ref": "#/components/schemas/CurrencyChoices"}, {"type": "null"}], "title": "Currency"}}, {"name": "note", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Note"}}, {"name": "reference", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Reference"}}, {"name": "preformed_by", "in": "query", "required": false, "schema": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Preformed By"}}, {"name": "balance", "in": "query", "required": false, "schema": {"anyOf": [{"type": "number"}, {"type": "string"}, {"type": "null"}], "title": "Balance"}}, {"name": "wallet", "in": "query", "required": false, "schema": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Wallet"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/WalletTransactionsResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/account/v1/wallet/me": {"get": {"tags": ["Wallet"], "summary": "Get My Wallets", "description": "Type and Scope:\n\n- **Type**: Any User Set\n- **Scope**: None", "operationId": "get_my_wallets", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/WalletsResponse"}}}}}, "security": [{"OAuth2PasswordBearer": []}]}}, "/api/account/v1/wallet/me/{currency}": {"get": {"tags": ["Wallet"], "summary": "Get My Wallet", "description": "Type and Scope:\n\n- **Type**: Any User Set\n- **Scope**: None", "operationId": "get_my_wallet", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "currency", "in": "path", "required": true, "schema": {"allOf": [{"$ref": "#/components/schemas/CurrencyChoices"}], "description": "Currency", "title": "Currency"}, "description": "Currency", "example": "IRR"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/WalletResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/account/v1/wallet/me/deposit": {"post": {"tags": ["Wallet"], "summary": "Topoff My Wallet", "description": "Type and Scope:\n\n- **Type**: Any User Set\n- **Scope**: None", "operationId": "topoff_my_wallet", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/WalletTopOffRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/WalletTopOffResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}]}}, "/api/account/v1/wallet/business/{business_id}": {"get": {"tags": ["Wallet"], "summary": "Get Business Wallets", "description": "Type and Scope:\n\n- **Type**: AGENCY or BUSINESS User Set\n- **Scope**: WALLET_READ", "operationId": "get_business_wallets", "security": [{"OAuth2PasswordBearer": ["WALLET:READ"]}], "parameters": [{"name": "business_id", "in": "path", "required": true, "schema": {"type": "integer", "description": "Business ID", "title": "Business Id"}, "description": "Business ID", "example": 1}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/WalletsResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"tags": ["Wallet"], "summary": "Update Business Wallet", "description": "Type and Scope:\n\n- **Type**: AGENCY User Set\n- **Scope**: WALLET:UPDATE", "operationId": "update_business_wallet", "security": [{"OAuth2PasswordBearer": ["WALLET:UPDATE"]}], "parameters": [{"name": "business_id", "in": "path", "required": true, "schema": {"type": "integer", "description": "Wallet ID", "title": "Business Id"}, "description": "Wallet ID", "example": 1}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/WalletUpdate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/WalletResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/account/v1/wallet/{user_id}": {"get": {"tags": ["Wallet"], "summary": "Get User Wallets", "description": "Type and Scope:\n\n- **Type**: AGENCY or BUSINESS User Set\n- **Scope**: WALLET_READ", "operationId": "get_user_wallets", "security": [{"OAuth2PasswordBearer": ["WALLET:READ"]}], "parameters": [{"name": "user_id", "in": "path", "required": true, "schema": {"type": "integer", "description": "User ID", "title": "User Id"}, "description": "User ID", "example": 1}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/WalletsResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"tags": ["Wallet"], "summary": "Update Wallet", "description": "Type and Scope:\n\n- **Type**: AGENCY User Set\n- **Scope**: WALLET:UPDATE", "operationId": "update_wallet", "security": [{"OAuth2PasswordBearer": ["WALLET:UPDATE"]}], "parameters": [{"name": "user_id", "in": "path", "required": true, "schema": {"type": "integer", "description": "Wallet ID", "title": "User Id"}, "description": "Wallet ID", "example": 1}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/WalletUpdate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/WalletResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/account/v1/wallet/{user_id}/{currency}": {"get": {"tags": ["Wallet"], "summary": "Get User Wallet", "description": "Type and Scope:\n\n- **Type**: AGENCY or BUSINESS User Set\n- **Scope**: WALLET:READ", "operationId": "get_user_wallet", "security": [{"OAuth2PasswordBearer": ["WALLET:READ"]}], "parameters": [{"name": "currency", "in": "path", "required": true, "schema": {"allOf": [{"$ref": "#/components/schemas/CurrencyChoices"}], "description": "Currency", "title": "Currency"}, "description": "Currency", "example": "IRR"}, {"name": "user_id", "in": "path", "required": true, "schema": {"type": "integer", "description": "User ID", "title": "User Id"}, "description": "User ID", "example": 1}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/WalletResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/account/v1/wallet/{user_id}/deposit": {"post": {"tags": ["Wallet"], "summary": "Topoff User Wallet", "description": "Type and Scope:\n\n- **Type**: Any\n- **Scope**: None", "operationId": "topoff_user_wallet", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "user_id", "in": "path", "required": true, "schema": {"type": "integer", "description": "The User ID you want to deposit money for.", "title": "User Id"}, "description": "The User ID you want to deposit money for.", "example": 1}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/WalletTopOffRequest"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/WalletTopOffResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/account/v1/ipg/callback/nextpay": {"get": {"tags": ["IPG"], "summary": "Nextpay Callback", "operationId": "nextpay_callback", "parameters": [{"name": "trans_id", "in": "query", "required": false, "schema": {"type": "string", "description": "Transaction ID for NextPay", "title": "Trans Id"}, "description": "Transaction ID for NextPay", "example": "8bf6cc9c-2f4f-4520-bd47-5eeb3721dd7d"}, {"name": "order_id", "in": "query", "required": false, "schema": {"type": "string", "description": "Order ID for NextPay", "title": "Order Id"}, "description": "Order ID for NextPay", "example": "6"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/account/v1/ipg/transactions": {"get": {"tags": ["IPG"], "summary": "List All Ipgs Transactions", "operationId": "list_all_ipgs_transactions", "security": [{"OAuth2PasswordBearer": ["IPG_TRANSACTION:READ"]}], "parameters": [{"name": "offset", "in": "query", "required": false, "schema": {"type": "integer", "default": 0, "title": "Offset"}}, {"name": "size", "in": "query", "required": false, "schema": {"type": "integer", "default": 10, "title": "Size"}}, {"name": "logical_op", "in": "query", "required": false, "schema": {"allOf": [{"$ref": "#/components/schemas/LogicalOperation"}], "default": "and", "title": "Logical Op"}}, {"name": "match_type", "in": "query", "required": false, "schema": {"allOf": [{"$ref": "#/components/schemas/MatchType"}], "default": "like", "title": "Match Type"}}, {"name": "user", "in": "query", "required": false, "schema": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "User"}}, {"name": "ipg", "in": "query", "required": false, "schema": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Ipg"}}, {"name": "status", "in": "query", "required": false, "schema": {"anyOf": [{"$ref": "#/components/schemas/TransactionStatus"}, {"type": "null"}], "title": "Status"}}, {"name": "type", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Type"}}, {"name": "wallet", "in": "query", "required": false, "schema": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Wallet"}}, {"name": "amount", "in": "query", "required": false, "schema": {"anyOf": [{"type": "number"}, {"type": "string"}, {"type": "null"}], "title": "Amount"}}, {"name": "currency", "in": "query", "required": false, "schema": {"anyOf": [{"$ref": "#/components/schemas/CurrencyChoices"}, {"type": "null"}], "title": "Currency"}}, {"name": "card_number", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Card Number"}}, {"name": "card_type", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Card Type"}}, {"name": "reference_id", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Reference Id"}}, {"name": "note", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Note"}}, {"name": "shaparak_reference_id", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Shaparak Reference Id"}}, {"name": "trace_number", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Trace Number"}}, {"name": "token", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Token"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IPGTransactionsResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/account/v1/ipg/transactions/{id}": {"get": {"tags": ["IPG"], "summary": "Get Ipg Transaction", "operationId": "get_ipg_transaction", "security": [{"OAuth2PasswordBearer": ["IPG_TRANSACTION:READ"]}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "integer", "description": "IPG Transaction ID", "title": "Id"}, "description": "IPG Transaction ID", "example": 1}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IPGTransactionResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/account/v1/ipg": {"post": {"tags": ["IPG"], "summary": "Create Ipg", "description": "This Method is for creating a ipg.", "operationId": "create_ipg", "security": [{"OAuth2PasswordBearer": ["IPG:CREATE"]}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IPGRequest"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IPGResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "get": {"tags": ["IPG"], "summary": "List Ipgs", "operationId": "list_ipgs", "security": [{"OAuth2PasswordBearer": ["IPG:READ"]}], "parameters": [{"name": "offset", "in": "query", "required": false, "schema": {"type": "integer", "default": 0, "title": "Offset"}}, {"name": "size", "in": "query", "required": false, "schema": {"type": "integer", "default": 10, "title": "Size"}}, {"name": "logical_op", "in": "query", "required": false, "schema": {"allOf": [{"$ref": "#/components/schemas/LogicalOperation"}], "default": "and", "title": "Logical Op"}}, {"name": "match_type", "in": "query", "required": false, "schema": {"allOf": [{"$ref": "#/components/schemas/MatchType"}], "default": "like", "title": "Match Type"}}, {"name": "name", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Name"}}, {"name": "type", "in": "query", "required": false, "schema": {"anyOf": [{"$ref": "#/components/schemas/IPGType"}, {"type": "null"}], "title": "Type"}}, {"name": "terminal_id", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Terminal Id"}}, {"name": "merchant_id", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Merchant Id"}}, {"name": "merchant_key", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Merchant Key"}}, {"name": "currency", "in": "query", "required": false, "schema": {"anyOf": [{"$ref": "#/components/schemas/CurrencyChoices"}, {"type": "null"}], "title": "Currency"}}, {"name": "priority", "in": "query", "required": false, "schema": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Priority"}}, {"name": "is_active", "in": "query", "required": false, "schema": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Is Active"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IPGsResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/account/v1/ipg/{id}": {"put": {"tags": ["IPG"], "summary": "Update Ipg", "description": "This Method is for updating a ipg.", "operationId": "update_ipg", "security": [{"OAuth2PasswordBearer": ["IPG:UPDATE"]}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "integer", "description": "IPG ID", "title": "Id"}, "description": "IPG ID", "example": 1}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IPGRequest"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IPGResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["IPG"], "summary": "Delete Ipg", "description": "This Method is for deleting a ipg.", "operationId": "delete_ipg", "security": [{"OAuth2PasswordBearer": ["IPG:DELETE"]}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "integer", "description": "IPG ID", "title": "Id"}, "description": "IPG ID", "example": 1}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Response"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "get": {"tags": ["IPG"], "summary": "Get Ipg", "operationId": "get_ipg", "security": [{"OAuth2PasswordBearer": ["IPG:READ"]}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "integer", "description": "IPG ID", "title": "Id"}, "description": "IPG ID", "example": 1}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IPGResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/account/v1/ipg/{ipg_id}/transactions": {"get": {"tags": ["IPG"], "summary": "List Ipg Transactions", "operationId": "list_ipg_transactions", "security": [{"OAuth2PasswordBearer": ["IPG_TRANSACTION:READ"]}], "parameters": [{"name": "ipg_id", "in": "path", "required": true, "schema": {"type": "integer", "description": "IPG ID", "title": "Ipg Id"}, "description": "IPG ID", "example": 1}, {"name": "offset", "in": "query", "required": false, "schema": {"type": "integer", "default": 0, "title": "Offset"}}, {"name": "size", "in": "query", "required": false, "schema": {"type": "integer", "default": 10, "title": "Size"}}, {"name": "logical_op", "in": "query", "required": false, "schema": {"allOf": [{"$ref": "#/components/schemas/LogicalOperation"}], "default": "and", "title": "Logical Op"}}, {"name": "match_type", "in": "query", "required": false, "schema": {"allOf": [{"$ref": "#/components/schemas/MatchType"}], "default": "like", "title": "Match Type"}}, {"name": "user", "in": "query", "required": false, "schema": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "User"}}, {"name": "ipg", "in": "query", "required": false, "schema": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Ipg"}}, {"name": "status", "in": "query", "required": false, "schema": {"anyOf": [{"$ref": "#/components/schemas/TransactionStatus"}, {"type": "null"}], "title": "Status"}}, {"name": "type", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Type"}}, {"name": "wallet", "in": "query", "required": false, "schema": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Wallet"}}, {"name": "amount", "in": "query", "required": false, "schema": {"anyOf": [{"type": "number"}, {"type": "string"}, {"type": "null"}], "title": "Amount"}}, {"name": "currency", "in": "query", "required": false, "schema": {"anyOf": [{"$ref": "#/components/schemas/CurrencyChoices"}, {"type": "null"}], "title": "Currency"}}, {"name": "card_number", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Card Number"}}, {"name": "card_type", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Card Type"}}, {"name": "reference_id", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Reference Id"}}, {"name": "note", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Note"}}, {"name": "shaparak_reference_id", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Shaparak Reference Id"}}, {"name": "trace_number", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Trace Number"}}, {"name": "token", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Token"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IPGTransactionsResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}}, "components": {"schemas": {"AddUserToGroupRequest": {"properties": {"user_ids": {"items": {"type": "integer"}, "type": "array", "title": "User Ids", "description": "List of user uuids to be added", "example": [1, 2, 3, 4, 5]}}, "type": "object", "required": ["user_ids"], "title": "AddUserToGroupRequest"}, "AgencyBusinessAccountUpdateRequest": {"properties": {"name": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Name", "description": "Name of the business account"}, "is_deleted": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Is Deleted", "description": "Whether the business account is deleted or not"}}, "type": "object", "title": "AgencyBusinessAccountUpdateRequest"}, "BaseGroup": {"properties": {"id": {"type": "integer", "title": "Id"}, "created_at": {"type": "string", "format": "date-time", "title": "Created At"}, "updated_at": {"type": "string", "format": "date-time", "title": "Updated At"}, "name": {"type": "string", "title": "Name", "description": "Name of the group", "example": "AdminGroup"}, "permissions": {"items": {"$ref": "#/components/schemas/UserPermission"}, "type": "array", "title": "Permissions", "description": "List of permissions assigned to the group", "example": ["USER_GROUP:ADD_USER", "USER_GROUP:READ"]}}, "type": "object", "required": ["id", "created_at", "updated_at", "name", "permissions"], "title": "BaseGroup"}, "BusinessAccount": {"properties": {"id": {"type": "integer", "maximum": 2147483647.0, "minimum": 1.0, "title": "Id"}, "created_at": {"type": "string", "format": "date-time", "title": "Created At", "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "title": "Updated At", "readOnly": true}, "name": {"type": "string", "maxLength": 100, "title": "Name"}, "is_deleted": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Is Deleted", "default": false}}, "additionalProperties": false, "type": "object", "required": ["id", "created_at", "updated_at", "name"], "title": "BusinessAccount"}, "BusinessAccountCreateRequest": {"properties": {"phone_number": {"type": "string", "title": "Phone Number"}, "name": {"type": "string", "title": "Name", "description": "Name of the business account"}}, "type": "object", "required": ["phone_number", "name"], "title": "BusinessAccountCreateRequest"}, "BusinessAccountResponse": {"properties": {"success": {"type": "boolean", "title": "Success", "default": true}, "data": {"allOf": [{"$ref": "#/components/schemas/BusinessAccount"}], "description": "Business account data"}}, "type": "object", "required": ["data"], "title": "BusinessAccountResponse"}, "BusinessAccountUpdateRequest": {"properties": {"name": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Name", "description": "Name of the business account"}}, "type": "object", "title": "BusinessAccountUpdateRequest"}, "BusinessAccountsResponse": {"properties": {"success": {"type": "boolean", "title": "Success", "default": true}, "total_pages": {"type": "integer", "title": "Total Pages"}, "items": {"items": {"$ref": "#/components/schemas/BusinessAccount"}, "type": "array", "title": "Items", "description": "List of business accounts"}}, "type": "object", "required": ["total_pages", "items"], "title": "BusinessAccountsResponse"}, "CreateGroupRequest": {"properties": {"name": {"type": "string", "title": "Name", "description": "Name of the group", "example": "AdminGroup"}, "permissions": {"items": {"$ref": "#/components/schemas/UserPermission"}, "type": "array", "title": "Permissions", "description": "List of permissions", "example": ["USER_GROUP:READ"]}}, "type": "object", "required": ["name", "permissions"], "title": "CreateGroupRequest"}, "CurrencyChoices": {"type": "string", "const": "IRR", "title": "CurrencyChoices"}, "Detail": {"properties": {"loc": {"items": {"anyOf": [{"type": "string"}, {"type": "integer"}]}, "type": "array", "title": "Loc"}, "msg": {"type": "string", "title": "Msg"}, "type": {"type": "string", "title": "Type"}}, "type": "object", "required": ["loc", "msg", "type"], "title": "Detail"}, "ErrorDetail": {"properties": {"id": {"type": "string", "title": "Id"}, "message": {"type": "string", "title": "Message"}}, "type": "object", "required": ["id", "message"], "title": "ErrorDetail"}, "ErrorResponse": {"properties": {"success": {"type": "boolean", "title": "Success", "default": false}, "error": {"$ref": "#/components/schemas/ErrorDetail"}}, "type": "object", "required": ["error"], "title": "ErrorResponse"}, "Group": {"properties": {"id": {"type": "integer", "title": "Id"}, "created_at": {"type": "string", "format": "date-time", "title": "Created At"}, "updated_at": {"type": "string", "format": "date-time", "title": "Updated At"}, "name": {"type": "string", "title": "Name", "description": "Name of the group", "example": "AdminGroup"}, "permissions": {"items": {"$ref": "#/components/schemas/UserPermission"}, "type": "array", "title": "Permissions", "description": "List of permissions assigned to the group", "example": ["USER_GROUP:ADD_USER", "USER_GROUP:READ"]}, "users": {"items": {"$ref": "#/components/schemas/UserAccount"}, "type": "array", "title": "Users", "description": "List of users assigned to the group"}}, "type": "object", "required": ["id", "created_at", "updated_at", "name", "permissions", "users"], "title": "Group"}, "GroupResponse": {"properties": {"success": {"type": "boolean", "title": "Success", "default": true}, "data": {"allOf": [{"$ref": "#/components/schemas/Group"}], "description": "Group data"}}, "type": "object", "required": ["data"], "title": "GroupResponse"}, "GroupsResponse": {"properties": {"success": {"type": "boolean", "title": "Success", "default": true}, "total_pages": {"type": "integer", "title": "Total Pages"}, "items": {"items": {"$ref": "#/components/schemas/Group"}, "type": "array", "title": "Items", "description": "List of groups"}}, "type": "object", "required": ["total_pages", "items"], "title": "GroupsResponse"}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "type": "array", "title": "Detail"}}, "type": "object", "title": "HTTPValidationError"}, "IPG": {"properties": {"id": {"type": "integer", "maximum": 2147483647.0, "minimum": 1.0, "title": "Id"}, "created_at": {"type": "string", "format": "date-time", "title": "Created At", "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "title": "Updated At", "readOnly": true}, "name": {"type": "string", "maxLength": 100, "title": "Name"}, "type": {"type": "string", "maxLength": 7, "title": "Type", "description": "SEP: SEP<br/>NEXTPAY: NEXTPAY"}, "terminal_id": {"anyOf": [{"type": "string", "maxLength": 100}, {"type": "null"}], "title": "Terminal Id", "nullable": true}, "merchant_id": {"anyOf": [{"type": "string", "maxLength": 100}, {"type": "null"}], "title": "Merchant Id", "nullable": true}, "merchant_key": {"anyOf": [{"type": "string", "maxLength": 100}, {"type": "null"}], "title": "Merchant Key", "nullable": true}, "password": {"anyOf": [{"type": "string", "maxLength": 100}, {"type": "null"}], "title": "Password", "nullable": true}, "callback_url": {"type": "string", "maxLength": 100, "title": "Callback Url"}, "currency": {"anyOf": [{"type": "string", "maxLength": 3}, {"type": "null"}], "title": "Currency", "description": "IRR: IRR", "default": "IRR"}, "priority": {"anyOf": [{"type": "integer", "maximum": 2147483647.0, "minimum": -2147483648.0}, {"type": "null"}], "title": "Priority", "default": 0}, "is_active": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Is Active", "default": true}, "url": {"type": "string", "maxLength": 100, "title": "Url"}}, "additionalProperties": false, "type": "object", "required": ["id", "created_at", "updated_at", "name", "type", "terminal_id", "merchant_id", "merchant_key", "password", "callback_url", "url"], "title": "IPG"}, "IPGRequest": {"properties": {"name": {"type": "string", "title": "Name", "description": "Name of the IPG", "example": "IPG Name"}, "type": {"allOf": [{"$ref": "#/components/schemas/IPGType"}], "description": "IPG provider type", "example": "SEP"}, "terminal_id": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Terminal Id", "description": "Terminal ID of the IPG", "example": "12212"}, "merchant_id": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Merchant Id", "description": "Merchant ID of the IPG", "example": "12212"}, "merchant_key": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Merchant Key", "description": "Merchant Key of the IPG", "example": "12212"}, "password": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Password", "description": "Password of the IPG", "example": "12212"}, "callback_url": {"type": "string", "title": "Callback Url", "description": "Callback URL, This should be the backend url that handles the callback from the IPG", "example": "https://owj.app/sep/callback"}, "currency": {"allOf": [{"$ref": "#/components/schemas/CurrencyChoices"}], "description": "Currency of the IPG", "example": "IRR"}, "priority": {"type": "integer", "title": "Priority", "description": "Priority of the IPG, IPGs with higher priority will be used first", "example": 0}, "is_active": {"type": "boolean", "title": "Is Active", "description": "Whether the IPG is active or not", "example": true}, "url": {"type": "string", "title": "Url", "description": "URL of the IPG API", "example": "https://sep.com"}}, "type": "object", "required": ["name", "type", "callback_url", "currency", "priority", "is_active", "url"], "title": "IPGRequest"}, "IPGResponse": {"properties": {"success": {"type": "boolean", "title": "Success", "default": true}, "data": {"allOf": [{"$ref": "#/components/schemas/IPG"}], "description": "IPG data"}}, "type": "object", "required": ["data"], "title": "IPGResponse"}, "IPGTransaction": {"properties": {"id": {"type": "integer", "maximum": 2147483647.0, "minimum": 1.0, "title": "Id"}, "created_at": {"type": "string", "format": "date-time", "title": "Created At", "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "title": "Updated At", "readOnly": true}, "status": {"anyOf": [{"type": "string", "maxLength": 11}, {"type": "null"}], "title": "Status", "description": "SUCCESS: SUCCESS<br/>FAILED: FAILED<br/>PENDING: PENDING<br/>CANCELED: CANCELED<br/>DISCREPANCY: DISCREPANCY<br/>UNKNOWN: UNKNOWN<br/>VERIFYING: VERIFYING", "default": "PENDING"}, "type": {"type": "string", "maxLength": 100, "title": "Type"}, "amount": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Amount", "default": 0}, "currency": {"anyOf": [{"type": "string", "maxLength": 3}, {"type": "null"}], "title": "Currency", "description": "IRR: IRR", "default": "IRR"}, "card_number": {"anyOf": [{"type": "string", "maxLength": 100}, {"type": "null"}], "title": "Card Number", "nullable": true}, "card_type": {"anyOf": [{"type": "string", "maxLength": 100}, {"type": "null"}], "title": "Card Type", "nullable": true}, "reference_id": {"anyOf": [{"type": "string", "maxLength": 100}, {"type": "null"}], "title": "Reference Id", "nullable": true}, "note": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Note", "nullable": true}, "ipg_reference_id": {"anyOf": [{"type": "string", "maxLength": 100}, {"type": "null"}], "title": "Ipg Reference Id", "nullable": true}, "shaparak_reference_id": {"anyOf": [{"type": "string", "maxLength": 100}, {"type": "null"}], "title": "Shaparak Reference Id", "nullable": true}, "trace_number": {"anyOf": [{"type": "string", "maxLength": 100}, {"type": "null"}], "title": "Trace Number", "nullable": true}, "token": {"anyOf": [{"type": "string", "maxLength": 100}, {"type": "null"}], "title": "Token", "nullable": true}}, "additionalProperties": false, "type": "object", "required": ["id", "created_at", "updated_at", "type", "card_number", "card_type", "reference_id", "note", "ipg_reference_id", "shaparak_reference_id", "trace_number", "token"], "title": "IPGTransaction"}, "IPGTransactionResponse": {"properties": {"success": {"type": "boolean", "title": "Success", "default": true}, "data": {"allOf": [{"$ref": "#/components/schemas/IPGTransaction"}], "description": "IPG transaction data"}}, "type": "object", "required": ["data"], "title": "IPGTransactionResponse"}, "IPGTransactionsResponse": {"properties": {"success": {"type": "boolean", "title": "Success", "default": true}, "total_pages": {"type": "integer", "title": "Total Pages"}, "items": {"items": {"$ref": "#/components/schemas/IPGTransaction"}, "type": "array", "title": "Items", "description": "List of IPG transactions"}}, "type": "object", "required": ["total_pages", "items"], "title": "IPGTransactionsResponse"}, "IPGType": {"type": "string", "enum": ["SEP", "NEXTPAY"], "title": "IPGType"}, "IPGsResponse": {"properties": {"success": {"type": "boolean", "title": "Success", "default": true}, "total_pages": {"type": "integer", "title": "Total Pages"}, "items": {"items": {"$ref": "#/components/schemas/IPG"}, "type": "array", "title": "Items", "description": "List of IPGs"}}, "type": "object", "required": ["total_pages", "items"], "title": "IPGsResponse"}, "LogicalOperation": {"type": "string", "enum": ["and", "or"], "title": "LogicalOperation"}, "MatchType": {"type": "string", "enum": ["exact", "not_exact", "like", "not_like"], "title": "MatchType"}, "MyGroupsResponse": {"properties": {"success": {"type": "boolean", "title": "Success", "default": true}, "items": {"items": {"$ref": "#/components/schemas/BaseGroup"}, "type": "array", "title": "Items", "description": "List of groups"}}, "type": "object", "required": ["items"], "title": "MyGroupsResponse"}, "OTPLoginRequest": {"properties": {"phone_number": {"type": "string", "title": "Phone Number", "description": "Phone number of the user in +E64 format", "example": "+919876543210"}, "otp": {"type": "string", "title": "Otp", "description": "One time password (OTP)"}}, "type": "object", "required": ["phone_number", "otp"], "title": "OTPLoginRequest"}, "OTPRequest": {"properties": {"phone_number": {"type": "string", "title": "Phone Number", "description": "Phone number of the user in +E64 format", "example": "+919876543210"}}, "type": "object", "required": ["phone_number"], "title": "OTPRequest"}, "OTPResponse": {"properties": {"success": {"type": "boolean", "title": "Success", "default": true}, "resend_timeout": {"type": "integer", "title": "Resend Timeout", "description": "Time in seconds after which OTP can be resent", "default": 60}}, "type": "object", "title": "OTPResponse"}, "RefreshTokenRequest": {"properties": {"refresh_token": {"type": "string", "title": "Refresh Token", "description": "JWT refresh token"}}, "type": "object", "required": ["refresh_token"], "title": "RefreshTokenRequest"}, "Response": {"properties": {"success": {"type": "boolean", "title": "Success", "default": true}}, "type": "object", "title": "Response"}, "SetPasswordRequest": {"properties": {"password": {"type": "string", "title": "Password"}, "confirm_password": {"type": "string", "title": "Confirm Password", "description": "Confirm password"}}, "type": "object", "required": ["password", "confirm_password"], "title": "SetPasswordRequest"}, "TokenResponse": {"properties": {"success": {"type": "boolean", "title": "Success", "default": true}, "access_token": {"type": "string", "title": "Access Token", "description": "JWT access token"}, "refresh_token": {"type": "string", "title": "Refresh Token", "description": "JWT refresh token"}, "token_type": {"type": "string", "title": "Token Type", "description": "Type of token"}}, "type": "object", "required": ["access_token", "refresh_token", "token_type"], "title": "TokenResponse"}, "TransactionStatus": {"type": "string", "enum": ["SUCCESS", "FAILED", "PENDING", "CANCELED", "DISCREPANCY", "UNKNOWN", "VERIFYING"], "title": "TransactionStatus"}, "UpdateGroupRequest": {"properties": {"name": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Name", "description": "The new name of the group", "example": "AdminGroup"}, "permissions": {"anyOf": [{"items": {"$ref": "#/components/schemas/UserPermission"}, "type": "array"}, {"type": "null"}], "title": "Permissions", "description": "The new list of permissions to be assigned to the group", "example": ["USER_GROUP:ADD_USER", "USER_GROUP:READ"]}}, "type": "object", "title": "UpdateGroupRequest"}, "UserAccount": {"properties": {"id": {"type": "integer", "title": "Id"}, "created_at": {"type": "string", "format": "date-time", "title": "Created At"}, "updated_at": {"type": "string", "format": "date-time", "title": "Updated At"}, "phone_number": {"type": "string", "title": "Phone Number"}, "uuid": {"type": "string", "format": "uuid4", "title": "Uuid", "description": "UUID of the user account"}, "type": {"allOf": [{"$ref": "#/components/schemas/UserTypeChoices"}], "description": "Type of the user", "example": "REGULAR_USER"}, "email": {"anyOf": [{"type": "string", "format": "email"}, {"type": "null"}], "title": "Email", "example": "sepehr@owj.app"}, "first_name": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "First Name", "example": "Sepehr"}, "last_name": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Last Name", "example": "Safa"}}, "type": "object", "required": ["id", "created_at", "updated_at", "phone_number", "uuid", "type"], "title": "UserAccount"}, "UserAccountCreateRequest": {"properties": {"phone_number": {"type": "string", "title": "Phone Number"}, "first_name": {"type": "string", "title": "First Name", "example": "John"}, "last_name": {"type": "string", "title": "Last Name", "example": "Doe"}, "type": {"anyOf": [{"$ref": "#/components/schemas/UserTypeChoices"}, {"type": "null"}], "description": "This will be set automatically based on the user type of the user who is creating this user account.", "default": "REGULAR_USER", "example": "REGULAR_USER"}, "email": {"anyOf": [{"type": "string", "format": "email"}, {"type": "null"}], "title": "Email", "description": "If not provided, the user will be created without an email.", "example": "John@owj.app"}, "business_id": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Business Id", "description": "If not provided, the user will be created without a business. It is required to create a business.", "example": 1}}, "type": "object", "required": ["phone_number", "first_name", "last_name"], "title": "UserAccountCreateRequest"}, "UserAccountFull": {"properties": {"id": {"type": "integer", "title": "Id"}, "created_at": {"type": "string", "format": "date-time", "title": "Created At"}, "updated_at": {"type": "string", "format": "date-time", "title": "Updated At"}, "phone_number": {"type": "string", "title": "Phone Number"}, "uuid": {"type": "string", "format": "uuid4", "title": "Uuid", "description": "UUID of the user account"}, "type": {"allOf": [{"$ref": "#/components/schemas/UserTypeChoices"}], "description": "Type of the user", "example": "REGULAR_USER"}, "email": {"anyOf": [{"type": "string", "format": "email"}, {"type": "null"}], "title": "Email", "example": "sepehr@owj.app"}, "first_name": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "First Name", "example": "Sepehr"}, "last_name": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Last Name", "example": "Safa"}, "iran_national_id": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Iran National Id", "description": "Iranian National ID", "example": "1234567890"}, "is_active": {"type": "boolean", "title": "Is Active"}, "is_buying_allowed": {"type": "boolean", "title": "Is Buying Allowed"}, "is_phone_number_verified": {"type": "boolean", "title": "Is Phone Number Verified"}, "is_email_verified": {"type": "boolean", "title": "Is Email Verified"}, "is_only_otp_login_allowed": {"type": "boolean", "title": "Is Only Otp Login Allowed"}, "is_2fa_on": {"type": "boolean", "title": "Is 2Fa On"}, "business_id": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Business Id", "description": "Business ID if the user is a business user", "example": 1}, "iban_number": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Iban Number", "description": "Iran IBAN (Shaba) Number", "example": "IR123456789012345678901234"}}, "type": "object", "required": ["id", "created_at", "updated_at", "phone_number", "uuid", "type", "is_active", "is_buying_allowed", "is_phone_number_verified", "is_email_verified", "is_only_otp_login_allowed", "is_2fa_on"], "title": "UserAccountFull"}, "UserAccountMe": {"properties": {"id": {"type": "integer", "title": "Id"}, "created_at": {"type": "string", "format": "date-time", "title": "Created At"}, "updated_at": {"type": "string", "format": "date-time", "title": "Updated At"}, "phone_number": {"type": "string", "title": "Phone Number"}, "uuid": {"type": "string", "format": "uuid4", "title": "Uuid", "description": "UUID of the user account"}, "type": {"allOf": [{"$ref": "#/components/schemas/UserTypeChoices"}], "description": "Type of the user", "example": "REGULAR_USER"}, "email": {"anyOf": [{"type": "string", "format": "email"}, {"type": "null"}], "title": "Email", "example": "sepehr@owj.app"}, "first_name": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "First Name", "example": "Sepehr"}, "last_name": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Last Name", "example": "Safa"}, "iran_national_id": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Iran National Id", "description": "Iranian National ID", "example": "1234567890"}, "is_active": {"type": "boolean", "title": "Is Active"}, "is_buying_allowed": {"type": "boolean", "title": "Is Buying Allowed"}, "is_phone_number_verified": {"type": "boolean", "title": "Is Phone Number Verified"}, "is_email_verified": {"type": "boolean", "title": "Is Email Verified"}, "is_only_otp_login_allowed": {"type": "boolean", "title": "Is Only Otp Login Allowed"}, "is_2fa_on": {"type": "boolean", "title": "Is 2Fa On"}, "business_id": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Business Id", "description": "Business ID if the user is a business user", "example": 1}, "iban_number": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Iban Number", "description": "Iran IBAN (Shaba) Number", "example": "IR123456789012345678901234"}, "wallets": {"items": {"$ref": "#/components/schemas/Wallet"}, "type": "array", "title": "Wallets", "description": "List of wallets"}, "business": {"anyOf": [{"$ref": "#/components/schemas/BusinessAccount"}, {"type": "null"}], "description": "Business account of the user"}, "permissions": {"items": {"type": "string"}, "type": "array", "title": "Permissions", "description": "List of permissions assigned to the user"}}, "type": "object", "required": ["id", "created_at", "updated_at", "phone_number", "uuid", "type", "is_active", "is_buying_allowed", "is_phone_number_verified", "is_email_verified", "is_only_otp_login_allowed", "is_2fa_on", "wallets", "permissions"], "title": "UserAccountMe"}, "UserAccountMeResponse": {"properties": {"success": {"type": "boolean", "title": "Success", "default": true}, "data": {"allOf": [{"$ref": "#/components/schemas/UserAccountMe"}], "description": "User account data"}}, "type": "object", "required": ["data"], "title": "UserAccountMeResponse"}, "UserAccountResponse": {"properties": {"success": {"type": "boolean", "title": "Success", "default": true}, "data": {"allOf": [{"$ref": "#/components/schemas/UserAccountFull"}], "description": "User account data"}}, "type": "object", "required": ["data"], "title": "UserAccountResponse"}, "UserAccountUpdateRequest": {"properties": {"first_name": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "First Name", "example": "Sepehr"}, "last_name": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Last Name", "example": "Safa"}, "email": {"anyOf": [{"type": "string", "format": "email"}, {"type": "null"}], "title": "Email", "example": "sepehr@owj.app"}, "iran_national_id": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Iran National Id", "description": "Iranian National ID", "example": "1234567890"}, "iban_number": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Iban Number", "description": "Iran IBAN (Shaba) Number", "example": "IR123456789012345678901234"}}, "type": "object", "title": "UserAccountUpdateRequest"}, "UserAccountUpdateRequestByAgency": {"properties": {"phone_number": {"type": "string", "title": "Phone Number"}, "first_name": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "First Name", "example": "Sepehr"}, "last_name": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Last Name", "example": "Safa"}, "email": {"anyOf": [{"type": "string", "format": "email"}, {"type": "null"}], "title": "Email", "example": "sepehr@owj.app"}, "iran_national_id": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Iran National Id", "description": "Iranian National ID", "example": "1234567890"}, "iban_number": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Iban Number", "description": "Iran IBAN (Shaba) Number", "example": "IR123456789012345678901234"}, "type": {"anyOf": [{"$ref": "#/components/schemas/UserTypeChoices"}, {"type": "null"}]}, "is_active": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Is Active"}, "is_buying_allowed": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Is Buying Allowed"}, "is_phone_number_verified": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Is Phone Number Verified"}, "is_email_verified": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Is Email Verified"}, "is_only_otp_login_allowed": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Is Only Otp Login Allowed"}, "is_2fa_on": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Is 2Fa On"}, "business_id": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Business Id", "description": "Business ID if the user is a business user", "example": 1}}, "type": "object", "required": ["phone_number"], "title": "UserAccountUpdateRequestByAgency"}, "UserAccountsResponse": {"properties": {"success": {"type": "boolean", "title": "Success", "default": true}, "total_pages": {"type": "integer", "title": "Total Pages"}, "items": {"items": {"$ref": "#/components/schemas/UserAccountFull"}, "type": "array", "title": "Items", "description": "List of user accounts"}}, "type": "object", "required": ["total_pages", "items"], "title": "UserAccountsResponse"}, "UserPermission": {"type": "string", "enum": ["USER_ACCOUNT:CREATE", "USER_ACCOUNT:UPDATE", "USER_ACCOUNT:DELETE", "USER_ACCOUNT:READ", "USER_GROUP:CREATE", "USER_GROUP:UPDATE", "USER_GROUP:DELETE", "USER_GROUP:READ", "USER_GROUP:ADD_USER", "USER_GROUP:REMOVE_USER", "BUSINESS_ACCOUNT:CREATE", "BUSINESS_ACCOUNT:UPDATE", "BUSINESS_ACCOUNT:DELETE", "BUSINESS_ACCOUNT:READ", "WALLET:CREATE", "WALLET:UPDATE", "WALLET:DELETE", "WALLET:READ", "WALLET_TRANSACTION:CREATE", "WALLET_TRANSACTION:UPDATE", "WALLET_TRANSACTION:DELETE", "WALLET_TRANSACTION:READ", "IPG:CREATE", "IPG:UPDATE", "IPG:DELETE", "IPG:READ", "IPG_TRANSACTION:READ"], "title": "UserPermission"}, "UserTypeChoices": {"type": "string", "enum": ["AGENCY_SUPERUSER", "AGENCY_USER", "BUSINESS_SUPERUSER", "BUSINESS_USER", "REGULAR_USER"], "title": "UserTypeChoices"}, "UsernamePasswordLoginRequest": {"properties": {"password": {"type": "string", "title": "Password"}, "username": {"type": "string", "title": "Username", "description": "Username of the user (email or phone number)"}, "otp": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Otp", "description": "OTP for 2FA. Required if 2FA is enabled"}}, "type": "object", "required": ["password", "username"], "title": "UsernamePasswordLoginRequest"}, "ValidationError": {"properties": {"loc": {"items": {"anyOf": [{"type": "string"}, {"type": "integer"}]}, "type": "array", "title": "Location"}, "msg": {"type": "string", "title": "Message"}, "type": {"type": "string", "title": "Error Type"}}, "type": "object", "required": ["loc", "msg", "type"], "title": "ValidationError"}, "ValidationErrorDetail": {"properties": {"id": {"type": "string", "title": "Id", "default": "E1001"}, "message": {"type": "string", "title": "Message", "default": "Validation error"}, "detail": {"items": {"$ref": "#/components/schemas/Detail"}, "type": "array", "title": "Detail"}}, "type": "object", "required": ["detail"], "title": "ValidationErrorDetail"}, "ValidationErrorResponse": {"properties": {"success": {"type": "boolean", "title": "Success", "default": false}, "error": {"$ref": "#/components/schemas/ValidationErrorDetail"}}, "type": "object", "required": ["error"], "title": "ValidationErrorResponse"}, "Wallet": {"properties": {"id": {"type": "integer", "maximum": 2147483647.0, "minimum": 1.0, "title": "Id"}, "created_at": {"type": "string", "format": "date-time", "title": "Created At", "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "title": "Updated At", "readOnly": true}, "limit": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Limit", "default": 0}, "amount": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Amount", "default": 0}, "currency": {"type": "string", "maxLength": 3, "title": "Currency", "description": "IRR: IRR"}}, "additionalProperties": false, "type": "object", "required": ["id", "created_at", "updated_at", "currency"], "title": "Wallet"}, "WalletResponse": {"properties": {"success": {"type": "boolean", "title": "Success", "default": true}, "data": {"allOf": [{"$ref": "#/components/schemas/Wallet"}], "description": "Wallet data"}}, "type": "object", "required": ["data"], "title": "WalletResponse"}, "WalletTopOffRequest": {"properties": {"amount": {"anyOf": [{"type": "number", "minimum": 0.0}, {"type": "string"}], "title": "Amount", "description": "Amount to top off"}, "currency": {"allOf": [{"$ref": "#/components/schemas/CurrencyChoices"}], "description": "Currency of the top off", "default": "IRR", "example": "IRR"}, "note": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Note", "description": "Note for the top off"}, "reference": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Reference", "description": "Reference for the top off"}, "return_url": {"type": "string", "title": "Return Url", "description": "URL to redirect after top off. This should be the frontend url that handles the redirect from backend"}}, "type": "object", "required": ["amount", "return_url"], "title": "WalletTopOffRequest"}, "WalletTopOffResponse": {"properties": {"success": {"type": "boolean", "title": "Success", "default": true}, "type": {"type": "string", "title": "Type", "description": "Determines how to handel top off on frontend", "default": "redirect"}, "url": {"type": "string", "title": "Url", "description": "URL to redirect to IPG"}, "token": {"type": "string", "title": "Token", "description": "Token to send to IPG. if type is redirect, this is already added to the url"}}, "type": "object", "required": ["url", "token"], "title": "WalletTopOffResponse"}, "WalletTransaction": {"properties": {"id": {"type": "integer", "maximum": 2147483647.0, "minimum": 1.0, "title": "Id"}, "created_at": {"type": "string", "format": "date-time", "title": "Created At", "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "title": "Updated At", "readOnly": true}, "amount": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Amount", "default": 0}, "currency": {"anyOf": [{"type": "string", "maxLength": 3}, {"type": "null"}], "title": "Currency", "description": "IRR: IRR", "default": "IRR"}, "note": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Note", "nullable": true}, "reference": {"anyOf": [{"type": "string", "maxLength": 100}, {"type": "null"}], "title": "Reference", "nullable": true}, "balance": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Balance", "default": 0}}, "additionalProperties": false, "type": "object", "required": ["id", "created_at", "updated_at", "note", "reference"], "title": "WalletTransaction"}, "WalletTransactionRequestByBusinessID": {"properties": {"amount": {"anyOf": [{"type": "number", "minimum": 0.0}, {"type": "string"}], "title": "Amount", "description": "Amount of the transaction"}, "currency": {"allOf": [{"$ref": "#/components/schemas/CurrencyChoices"}], "description": "Currency of the transaction", "default": "IRR", "example": "IRR"}, "note": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Note", "description": "Note for the transaction"}, "reference": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Reference", "description": "Reference for the transaction. Example Flight Sale ID"}, "business_id": {"type": "integer", "title": "Business Id", "description": "ID of the business"}}, "type": "object", "required": ["amount", "business_id"], "title": "WalletTransactionRequestByBusinessID"}, "WalletTransactionRequestByUserID": {"properties": {"amount": {"anyOf": [{"type": "number", "minimum": 0.0}, {"type": "string"}], "title": "Amount", "description": "Amount of the transaction"}, "currency": {"allOf": [{"$ref": "#/components/schemas/CurrencyChoices"}], "description": "Currency of the transaction", "default": "IRR", "example": "IRR"}, "note": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Note", "description": "Note for the transaction"}, "reference": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Reference", "description": "Reference for the transaction. Example Flight Sale ID"}, "user_id": {"type": "integer", "title": "User Id", "description": "ID of the user"}}, "type": "object", "required": ["amount", "user_id"], "title": "WalletTransactionRequestByUserID"}, "WalletTransactionResponse": {"properties": {"success": {"type": "boolean", "title": "Success", "default": true}, "data": {"allOf": [{"$ref": "#/components/schemas/WalletTransaction"}], "description": "Wallet transaction data"}}, "type": "object", "required": ["data"], "title": "WalletTransactionResponse"}, "WalletTransactionsResponse": {"properties": {"success": {"type": "boolean", "title": "Success", "default": true}, "total_pages": {"type": "integer", "title": "Total Pages"}, "items": {"items": {"$ref": "#/components/schemas/WalletTransaction"}, "type": "array", "title": "Items", "description": "List of wallet transactions"}}, "type": "object", "required": ["total_pages", "items"], "title": "WalletTransactionsResponse"}, "WalletUpdate": {"properties": {"limit": {"anyOf": [{"type": "number", "minimum": 0.0}, {"type": "string"}], "title": "Limit", "description": "Limit of the wallet"}, "currency": {"allOf": [{"$ref": "#/components/schemas/CurrencyChoices"}], "description": "Currency of the wallet", "default": "IRR", "example": "IRR"}}, "type": "object", "required": ["limit"], "title": "WalletUpdate"}, "WalletsResponse": {"properties": {"success": {"type": "boolean", "title": "Success", "default": true}, "items": {"items": {"$ref": "#/components/schemas/Wallet"}, "type": "array", "title": "Items", "description": "List of wallets"}}, "type": "object", "required": ["items"], "title": "WalletsResponse"}}, "securitySchemes": {"OAuth2PasswordBearer": {"type": "oauth2", "flows": {"password": {"scopes": {}, "tokenUrl": "/api/account/v1/auth/oauth2"}}}}}}